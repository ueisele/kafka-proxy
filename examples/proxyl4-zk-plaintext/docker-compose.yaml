#############################################################
# Kafka Cluster with ZooKeeper                              #
# L4 Kafka Proxy for Clients                                #
#############################################################
---
version: '2.4'
services:
  #############################################################
  # Kafka CLI                                                 #
  #############################################################
  kafka-cli:
    image: ueisele/apache-kafka-server:${KAFKA_VERSION}
    hostname: kafka-cli
    networks:
      - public
    entrypoint: /bin/bash
    tty: true

  kafkacat:
    image: confluentinc/cp-kafkacat:6.2.0
    hostname: kafkacat
    networks:
      - public
    entrypoint: /bin/bash
    tty: true

  #############################################################
  # Envoy Proxy                                               #
  #############################################################
  envoy-kafka-broker1:
    image: envoyproxy/envoy:${ENVOY_VERSION}
    restart: always
    hostname: envoy-kafka-broker1
    command: ["envoy", "-c", "/etc/envoy/envoy.yaml", "--component-log-level", "kafka:trace"]
    volumes:
      - ./envoy-kafka-broker1.yaml:/etc/envoy/envoy.yaml
    expose:
      - 9092
      - 10000
    networks:
      public:
        aliases:
          - kafka
          - envoy-kafka
      intern: {}

  envoy-kafka-broker2:
    image: envoyproxy/envoy:${ENVOY_VERSION}
    restart: always
    hostname: envoy-kafka-broker2
    command: ["envoy", "-c", "/etc/envoy/envoy.yaml", "--component-log-level", "kafka:trace"]
    expose:
      - 9092
      - 10000
    volumes:
      - ./envoy-kafka-broker2.yaml:/etc/envoy/envoy.yaml
    networks:
      public:
        aliases:
          - kafka
          - envoy-kafka
      intern: {}

  envoy-kafka-broker3:
    image: envoyproxy/envoy:${ENVOY_VERSION}
    restart: always
    hostname: envoy-kafka-broker3
    command: ["envoy", "-c", "/etc/envoy/envoy.yaml", "--component-log-level", "kafka:trace"]
    volumes:
      - ./envoy-kafka-broker3.yaml:/etc/envoy/envoy.yaml
    expose:
      - 9092
      - 10000
    networks:
      public:
        aliases:
          - kafka
          - envoy-kafka
      intern: {}

  #############################################################
  # ZooKeeper                                                 #
  #############################################################
  zookeeper1:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    restart: always
    hostname: zookeeper1
    networks:
      - intern
    volumes:
      - zookeeper1:/var/lib/zookeeper/data
    # https://docs.confluent.io/current/zookeeper/deployment.html
    # https://docs.confluent.io/current/installation/docker/config-reference.html#zk-configuration
    environment:
      ZOOKEEPER_SERVER_ID: 1 # (required in cluster mode) Sets the server ID in the myid file, which consists of a single line that contains only the text of that machine’s ID.
      ZOOKEEPER_CLIENT_PORT: 2181 # (required) This is the port where ZooKeeper clients will listen on. This is where the Brokers will connect to ZooKeeper.
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
      ZOOKEEPER_TICK_TIME: 2000 # (default: 3000) The unit of time for ZooKeeper translated to milliseconds. This governs all ZooKeeper time dependent operations. It is used for heartbeats and timeouts especially.
      # The initLimit and syncLimit are used to govern how long following ZooKeeper servers can take to initialize with the current leader and how long they can be out of sync with the leader.
      ZOOKEEPER_INIT_LIMIT: 5 # (default: 10)
      ZOOKEEPER_SYNC_LIMIT: 2 # (default: 5)

  zookeeper2:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    restart: always
    hostname: zookeeper2
    networks:
      - intern
    volumes:
      - zookeeper2:/var/lib/zookeeper/data
    # https://docs.confluent.io/current/zookeeper/deployment.html
    # https://docs.confluent.io/current/installation/docker/config-reference.html#zk-configuration
    environment:
      ZOOKEEPER_SERVER_ID: 2 # (required in cluster mode) Sets the server ID in the myid file, which consists of a single line that contains only the text of that machine’s ID.
      ZOOKEEPER_CLIENT_PORT: 2181 # (required) This is the port where ZooKeeper clients will listen on. This is where the Brokers will connect to ZooKeeper.
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
      ZOOKEEPER_TICK_TIME: 2000 # (default: 3000) The unit of time for ZooKeeper translated to milliseconds. This governs all ZooKeeper time dependent operations. It is used for heartbeats and timeouts especially.
      # The initLimit and syncLimit are used to govern how long following ZooKeeper servers can take to initialize with the current leader and how long they can be out of sync with the leader.
      ZOOKEEPER_INIT_LIMIT: 5 # (default: 10)
      ZOOKEEPER_SYNC_LIMIT: 2 # (default: 5)

  zookeeper3:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
    restart: always
    hostname: zookeeper3
    networks:
      - intern
    volumes:
      - zookeeper3:/var/lib/zookeeper/data
    # https://docs.confluent.io/current/zookeeper/deployment.html
    # https://docs.confluent.io/current/installation/docker/config-reference.html#zk-configuration
    environment:
      ZOOKEEPER_SERVER_ID: 3 # (required in cluster mode) Sets the server ID in the myid file, which consists of a single line that contains only the text of that machine’s ID.
      ZOOKEEPER_CLIENT_PORT: 2181 # (required) This is the port where ZooKeeper clients will listen on. This is where the Brokers will connect to ZooKeeper.
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
      ZOOKEEPER_TICK_TIME: 2000 # (default: 3000) The unit of time for ZooKeeper translated to milliseconds. This governs all ZooKeeper time dependent operations. It is used for heartbeats and timeouts especially.
      # The initLimit and syncLimit are used to govern how long following ZooKeeper servers can take to initialize with the current leader and how long they can be out of sync with the leader.
      ZOOKEEPER_INIT_LIMIT: 5 # (default: 10)
      ZOOKEEPER_SYNC_LIMIT: 2 # (default: 5)

  #############################################################
  # Kafka Broker                                              #
  #############################################################
  kafka-broker1:
    image: ueisele/apache-kafka-server:${KAFKA_VERSION}
    restart: always
    hostname: kafka-broker1
    networks:
      intern:
        aliases:
          - kafka
    volumes:
      - kafka-broker1:/opt/apache/kafka/data
    environment:
      #### Server Basics ####
      KAFKA_NODE_ID: 101 # (default: -1, required in KRaft mode) The node id for this server.
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181 # (required) Instructs Kafka how to get in touch with ZooKeeper.
      #### Socket Server Settings ###
      KAFKA_LISTENERS: PUBLIC://0.0.0.0:19092,INTERN://0.0.0.0:9092,REPLICATION://0.0.0.0:9091,CONTROLPANE://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PUBLIC://envoy-kafka-broker1:9092,INTERN://kafka-broker1:9092,REPLICATION://kafka-broker1:9091,CONTROLPANE://kafka-broker1:9094 # (required) Describes how the host name that is advertised and can be reached by clients. HOST://localhost:19092 enables access from Docker host.
      KAFKA_INTER_BROKER_LISTENER_NAME: REPLICATION
      KAFKA_CONTROL_PLANE_LISTENER_NAME: CONTROLPANE
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER # (required in KRaft mode) The listeners used by the controller to define the security protocol.
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PUBLIC:PLAINTEXT,INTERN:PLAINTEXT,REPLICATION:PLAINTEXT,CONTROLPANE:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL # (default: PLAINTEXT:PLAINTEXT,...) Map between listener names and security protocols. In this scenario this setting is used to define listeners with names.

  kafka-broker2:
    image: ueisele/apache-kafka-server:${KAFKA_VERSION}
    restart: always
    hostname: kafka-broker2
    networks:
      intern:
        aliases:
          - kafka
    volumes:
      - kafka-broker2:/opt/apache/kafka/data
    environment:
      #### Server Basics ####
      KAFKA_NODE_ID: 102 # (default: -1, required in KRaft mode) The node id for this server.
      KAFKA_ZOOKEEPER_CONNECT: zookeeper2:2181,zookeeper1:2181,zookeeper3:2181 # (required) Instructs Kafka how to get in touch with ZooKeeper.
      #### Socket Server Settings ###
      KAFKA_LISTENERS: PUBLIC://0.0.0.0:19092,INTERN://0.0.0.0:9092,REPLICATION://0.0.0.0:9091,CONTROLPANE://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PUBLIC://envoy-kafka-broker2:9092,INTERN://kafka-broker2:9092,REPLICATION://kafka-broker2:9091,CONTROLPANE://kafka-broker2:9094 # (required) Describes how the host name that is advertised and can be reached by clients. HOST://localhost:19092 enables access from Docker host.
      KAFKA_INTER_BROKER_LISTENER_NAME: REPLICATION
      KAFKA_CONTROL_PLANE_LISTENER_NAME: CONTROLPANE
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER # (required in KRaft mode) The listeners used by the controller to define the security protocol.
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PUBLIC:PLAINTEXT,INTERN:PLAINTEXT,REPLICATION:PLAINTEXT,CONTROLPANE:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL # (default: PLAINTEXT:PLAINTEXT,...) Map between listener names and security protocols. In this scenario this setting is used to define listeners with names.

  kafka-broker3:
    image: ueisele/apache-kafka-server:${KAFKA_VERSION}
    restart: always
    hostname: kafka-broker3
    networks:
      intern:
        aliases:
          - kafka
    volumes:
      - kafka-broker3:/opt/apache/kafka/data
    environment:
      #### Server Basics ####
      KAFKA_NODE_ID: 103 # (default: -1, required in KRaft mode) The node id for this server.
      KAFKA_ZOOKEEPER_CONNECT: zookeeper3:2181,zookeeper1:2181,zookeeper2:2181 # (required) Instructs Kafka how to get in touch with ZooKeeper.
      #### Socket Server Settings ###
      KAFKA_LISTENERS: PUBLIC://0.0.0.0:19092,INTERN://0.0.0.0:9092,REPLICATION://0.0.0.0:9091,CONTROLPANE://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PUBLIC://envoy-kafka-broker3:9092,INTERN://kafka-broker3:9092,REPLICATION://kafka-broker3:9091,CONTROLPANE://kafka-broker3:9094 # (required) Describes how the host name that is advertised and can be reached by clients. HOST://localhost:19092 enables access from Docker host.
      KAFKA_INTER_BROKER_LISTENER_NAME: REPLICATION
      KAFKA_CONTROL_PLANE_LISTENER_NAME: CONTROLPANE
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER # (required in KRaft mode) The listeners used by the controller to define the security protocol.
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PUBLIC:PLAINTEXT,INTERN:PLAINTEXT,REPLICATION:PLAINTEXT,CONTROLPANE:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL # (default: PLAINTEXT:PLAINTEXT,...) Map between listener names and security protocols. In this scenario this setting is used to define listeners with names.

volumes:
  zookeeper1:
  zookeeper2:
  zookeeper3:
  kafka-broker1:
  kafka-broker2:
  kafka-broker3:

networks:
  public:
    name: ${DOMAIN_PUBLIC}
    driver: bridge
  intern:
    name: ${DOMAIN_INTERN}
    driver: bridge